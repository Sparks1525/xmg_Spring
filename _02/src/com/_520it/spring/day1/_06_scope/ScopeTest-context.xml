<?xml version="1.0" encoding="UTF-8"?>

<!-- beans:javabean
     spring是一个放java对象的容器,把放在spring中的java对象称为javabean
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd">

        <!--
            可以用scope属性来限定bean的生命范围(在什么范围内拿到的bean是相同的)
            singleton:整个应用里面,拿这个bean,拿到的是同一个引用(单例);singleton也是默认的scope
            prototype:原型模式:每次拿到这个对象,拿到的对象都是这个对象原对象的一份拷贝;每拿一次,就创建一个新的对象;
                      注意,对于scope位prototype的bean,applicationContext在启动的时候不会去初始化这些类;
            request:在一次请求(HttpRequest)中,创建一个;(一般不会使用,必须是在有Web环境的Spring中使用,,,,,SpringMVC)
            session:在一个会话中(HttpSession)中,创建一个;(一般不会使用,必须是在有Web环境的Spring中使用,,,,,SpringMVC)
        -->

        <bean id="somebean" class="com._520it.spring.day1._06_scope.SomeBean" scope="prototype"/>

        <!-- <bean id="somebean" class="com._520it.spring.day1._05_scopecope.SomeBean" _06_scope="XXXX.XXXX.ThreadScope"/> -->


</beans>